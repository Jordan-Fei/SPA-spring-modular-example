<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <http pattern="/resources/views/so_*" use-expressions="true">
	    <intercept-url pattern='/**' access="hasRole('ROLE_USER')" />
	    <http-basic />
	    <!-- could enhance another entry-point-ref to replace this form-login -->
	    <form-login login-page='/resources/views/login.html'/>
    </http>
    	
	<http pattern="/resources/**" security="none" />

	
	<!-- Need to move to  servlet-context.xml <global-method-security pre-post-annotations="enabled" />-->
 
	<!-- HTTP basic authentication in Spring Security -->
	<http use-expressions="true">
	    <!-- configuration for angularjs security control  <intercept-url pattern="/**" access="permitAll" />-->
	    <intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/page/**" access="hasRole('ROLE_USER')" />
		<!--  <intercept-url pattern="/" access="hasRole('ROLE_USER')" />-->
		<!--  <form-login login-page='/login'/>-->
		<http-basic entry-point-ref="unauthorisedEntryPoint" />
	</http>
 
	<authentication-manager>
	   <authentication-provider>
	       <user-service>
		   <user name="jordan" password="123456" authorities="ROLE_USER" />
	       </user-service>
	   </authentication-provider>
	</authentication-manager>
	
	<context:component-scan base-package="com.jfi" />
 
</beans:beans>
